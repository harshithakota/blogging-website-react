{"version":3,"sources":["http-common.js","services/BlogService.js","components/post.jsx","components/pagination.jsx","components/blog-list.jsx","components/home.jsx","components/comments/comment-form.jsx","components/comments/comment-confiramtion.jsx","components/comments/comment.jsx","components/comments/comment-box.jsx","components/blog-detail.jsx","components/write.jsx","components/layout/header.jsx","components/register.jsx","components/login.jsx","App.jsx","actions/types.js","reducers/blog.js","reducers/index.js","store.js","index.js"],"names":["axios","create","baseURL","headers","BlogService","getAll","http","get","id","data","post","update","put","remove","delete","removeAll","findByTitle","title","gettag","tag","Post","props","_id","author","description","created_at","className","class","name","length","substring","style","paddingBottom","moment","format","to","Pagination","RenderComponent","pageLimit","dataLimit","useState","Math","round","pages","currentPage","setCurrentPage","changePage","event","pageNumber","Number","target","textContent","useEffect","window","scrollTo","behavior","top","startIndex","endIndex","slice","getPaginatedData","map","d","idx","onClick","page","start","floor","Array","fill","_","getPaginationGroup","item","index","BlogList","blogs","setBlogsList","BlogDataService","then","response","catch","e","console","log","useNavigate","tag_blog","setTag","type","value","placeholder","onChange","res","alert","Home","user","JSON","parse","localStorage","getItem","color","src","alt","CommentForm","state","characters","_handleSubmit","bind","_getCharacterCount","onSubmit","this","ref","input","_author","textarea","_body","setState","preventDefault","addComment","React","Component","CommentConfirmation","showConfirm","_confirmDelete","_toggleConfirmMessage","confirmNode","href","children","onDelete","Comment","isAbusive","_handleConfirm","_toggleAbuse","commentBody","body","CommentBox","showComments","comments","_addComment","_deleteComment","_handleClick","_fetchComments","commentNode","_getComments","buttonText","fontSize","_getPopularMessage","_getCommentsTitle","_getCommentsVisibility","comment","key","commentAuthor","apiUrl","commentID","filter","commentCount","BlogDetail","params","useParams","useDispatch","blogdetail","setBlogData","paddingLeft","Write","history","blog","setBlog","handleChange","paddingTop","htmlFor","width","required","rows","height","onLoad","Header","updateUser","marginLeft","Register","email","password","reEnterPassword","setUser","Login","errorMessage","setErrorMessage","err","message","App","setLoginUser","setItem","stringify","path","element","CREATE_BLOG","RETRIEVE_BLOGS","UPDATE_BLOG","DELETE_BLOG","DELETE_ALL_BLOGS","RETRIEVE_BLOGS_BY_ID","RETRIEVE_BLOGS_BY_TAG","initialState","blogReducer","action","payload","combineReducers","middleware","thunk","oldState","serialisedState","loadState","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","subscribe","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1694b1e8.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:9002\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","import http from \"../http-common\";\n\nconst getAll = () => {\n  return http.get(\"/bloglist\");\n};\n\nconst get = id => {\n  return http.get(`/blogdetail/${id}`);\n};\n\nconst create = data => {\n  return http.post(\"/blogs\", data);\n};\n\nconst update = (id, data) => {\n  return http.put(`/blogs/${id}`, data);\n};\n\nconst remove = id => {\n  return http.delete(`/blogs/${id}`);\n};\n\nconst removeAll = () => {\n  return http.delete(`/blogs`);\n};\n\nconst findByTitle = title => {\n  return http.get(`/blogs?title=${title}`);\n};\n\nconst gettag = tag => {\n  return http.get(`/searchtag/${tag}`);\n};\n\nconst BlogService = {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n  removeAll,\n  findByTitle,\n  gettag\n};\n\nexport default BlogService;\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from 'moment';\r\n\r\n\r\n//render component for pagination\r\nfunction Post(props) {\r\n  const { _id,title,author,tag,description,created_at } = props.data;\r\n  return (\r\n    <div className=\"list-group\">\r\n    <div class=\"card\">\r\n  <h5 class=\"card-header\">Written by {author?.name}</h5>\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">{title}</h5>\r\n    <p class=\"card-text\">{ description.length < 80 ? description : description.substring(0, 80)+\"..\" }</p>\r\n    <div className=\"blog-date\" style={{paddingBottom:'20px'}}>\r\n        {moment(created_at).format('MMMM Do YYYY')}\r\n          </div>\r\n    <Link to={`/blog-details/${_id}`} class=\"btn btn-primary\">Read Article</Link>\r\n  </div>\r\n</div>\r\n</div>\r\n    )};\r\n\r\n\r\nexport default Post\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './pagination.css';\r\n\r\nfunction Pagination({ data, RenderComponent, title, pageLimit, dataLimit }) {\r\n  const [pages] = useState(Math.round(data.length / dataLimit));\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  function goToNextPage() {\r\n     setCurrentPage((page) => page + 1);\r\n  }\r\n\r\n  function goToPreviousPage() {\r\n     setCurrentPage((page) => page - 1);\r\n  }\r\n\r\n  function changePage(event) {\r\n    const pageNumber = Number(event.target.textContent);\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  const getPaginatedData = () => {\r\n    const startIndex = currentPage * dataLimit - dataLimit;\r\n    const endIndex = startIndex + dataLimit;\r\n    return data.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getPaginationGroup = () => {\r\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\r\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n  window.scrollTo({ behavior: 'smooth', top: '0px' });\r\n}, [currentPage]);\r\n\r\n  return (\r\n  <div>\r\n\r\n\r\n    {/* show the posts, 10 posts at a time */}\r\n    <div className=\"dataContainer\">\r\n      {getPaginatedData().map((d, idx) => (\r\n        <RenderComponent key={idx} data={d} />\r\n      ))}\r\n    </div>\r\n\r\n    {/* show the pagiantion\r\n        it consists of next and previous buttons\r\n        along with page numbers, in our case, 5 page\r\n        numbers at a time\r\n    */}\r\n    <div className=\"pagination\">\r\n      {/* previous button */}\r\n      <button\r\n        onClick={goToPreviousPage}\r\n        className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\r\n      >\r\n        prev\r\n      </button>\r\n\r\n      {/* show page numbers */}\r\n      {getPaginationGroup().map((item, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={changePage}\r\n          className={`paginationItem ${currentPage === item ? 'active' : null}`}\r\n        >\r\n          <span>{item}</span>\r\n        </button>\r\n      ))}\r\n\r\n      {/* next button */}\r\n      <button\r\n        onClick={goToNextPage}\r\n        className={`next ${currentPage === pages ? 'disabled' : ''}`}\r\n      >\r\n        next\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from 'react';\nimport './blog-list.css';\nimport { Link } from \"react-router-dom\";\nimport BlogDataService from \"../services/BlogService\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Post from \"./post.jsx\"\nimport Pagination from \"./pagination.jsx\"\nimport ReactPaginate from 'react-paginate';\n\n\nfunction BlogList(props) {\n\n  const [blogs, setBlogsList] = useState([]);\n//to get all the blogs we are using BlogDataService\n  useEffect(() => {\n\n    BlogDataService.getAll()\n        .then(response => {\n          setBlogsList(response.data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n\n  }, []);\n\n\n\n\n  const history = useNavigate()\n\n  const [ tag_blog, setTag] = useState({\n      tag:\"\"\n  })\n\n  const handleChange = e => {\n      const { name, value } = e.target\n      setTag({\n          ...tag_blog,\n          [name]: value\n      })\n  }\n\n  const handleSubmit = () => {\n      const {tag} = tag_blog\n      if( tag){\n        console.log(tag)\n          axios.get(`http://localhost:9002/searchtag/${tag}`)\n          .then( res => {\n            setBlogsList(res.data);\n              console.log(res.data)\n              // history(\"/\")\n          })\n      } else {\n          alert(\"invlid input\")\n      }\n\n  }\n\n   return (\n     <div class=\"containerr\">\n     <div class=\"sb-example-1\">\n\n         <div className=\"search\">\n         <>\n        <input type=\"text\" className=\"searchTerm\" name=\"tag\" value={tag_blog.tag} placeholder=\"What are you looking for?\"  onChange={handleChange} />\n      <br />\n      <button onClick={handleSubmit}>Search</button>\n    </>\n\n         </div>\n\n      </div>\n\n      <div>\n       {blogs.length > 0 ? (\n         <>\n           <Pagination\n             data={blogs}\n             RenderComponent={Post}\n             title=\"Posts\"\n             pageLimit={5}\n             dataLimit={7}\n           />\n         </>\n       ) : (\n        <h1>No Posts to display</h1>\n       )}\n     </div>\n\n      </div>\n   );\n\n}\n\nexport default BlogList;\n","import React from \"react\"\nimport './home.css'\nimport BlogList from \"./blog-list.jsx\"\nimport { Link } from \"react-router-dom\";\n//homepage\nfunction Home(){\n  const user = JSON.parse(localStorage.getItem(\"MyUser\"))\n  return <div>\n    <div  className=\"home\" >\n      <div className=\"front\">\n        <div>\n          <div className=\"main\">\n          Article Avenue is a<br/> place to write, read, <br/>and learn\n          </div>\n\n          <div className=\"sub\">\n          It's easy to post your knowledge on any topic and connect<br/> with millions of readers.\n          </div>\n          {user && user.name ? <div className=\"write\"><button className=\"button-home\"><Link to=\"blog-write\" style={{color:'inherit'}}>Start Writing</Link></button></div> \n          : <div></div>}\n\n        </div>\n        <div className=\"image\"><img src=\"images/home-image.png\" alt=\"\" /></div>\n      </div>\n    </div>\n    <div className=\"line-home\"></div>\n    <BlogList/>\n  </div>\n}\n\nexport default Home;\n","import React from 'react';\nimport './comment-form.css';\n\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      characters: 0\n    };\n\n    \n    this._handleSubmit = this._handleSubmit.bind(this);\n    this._getCharacterCount = this._getCharacterCount.bind(this);\n  }\n\n  render() {\n    return (\n        //onSubmit call _handleSubmit\n        <form className=\"comment-form\" onSubmit={this._handleSubmit}>\n          <label style={{color: \"black\"}}>New comment</label>\n          <div className=\"comment-form-fields\">\n            {/* refs allow us to access input data from submit handler. React calls the ref function when it renders the component */}\n            <input placeholder=\"Name:\" ref={input => this._author = input}/>\n            <textarea placeholder=\"Comment:\" ref={textarea => this._body = textarea} onChange={this._getCharacterCount}></textarea>\n          </div>\n          <p>{this.state.characters} characters</p>\n          <div className=\"comment-form-actions\">\n            <button type=\"submit\">\n              Post comment\n            </button>\n          </div>\n        </form>\n    );\n  }\n\n  _getCharacterCount() {\n\n    this.setState({\n      characters: this._body.value.length\n    });\n\n  }\n\n  _handleSubmit(event) {\n    // Make sure page is not reloaded on submit\n    event.preventDefault();\n\n    // calls the addComment function in the parent component CommentBox\n    this.props.addComment(this._author.value, this._body.value);\n\n    this._author.value = '';\n    this._body.value = '';\n\n    this.setState({characters: 0});\n  }\n}\n","import React from 'react';\n\nexport default class CommentConfirmation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showConfirm: false\n    };\n\n    // every time setState is called the render function gets called again\n    // every time we do .bind inline we are making a new reference every time render is called\n    // by doing this we are relying on the garbage collector to get rid of those objects over time\n    // whereas if we pre-bind them we are only using one memory reference\n    this._confirmDelete = this._confirmDelete.bind(this);\n    this._toggleConfirmMessage = this._toggleConfirmMessage.bind(this);\n  }\n\n  render() {\n\n    let confirmNode;\n\n    if (this.state.showConfirm) {\n      return (\n          <span>\n          <a href=\"\" onClick={this._confirmDelete}>Yes </a> - or - <a href=\"\" onClick={this._toggleConfirmMessage}> No</a>\n        </span>\n      );\n    } else {\n      confirmNode = <a href=\"\" onClick={this._toggleConfirmMessage}>{this.props.children}</a>;\n    }\n\n    return (\n        <span>\n        {confirmNode}\n      </span>\n    );\n  }\n\n  _toggleConfirmMessage(event) {\n    event.preventDefault();\n\n    this.setState({\n      showConfirm: !this.state.showConfirm\n    });\n\n  }\n\n  _confirmDelete(event) {\n    event.preventDefault();\n    // call the comment component onDelete prop\n    this.props.onDelete();\n  }\n}\n","import React from 'react';\n\nimport './comment.css';\n\nimport CommentConfirmation from './comment-confiramtion';\n\nexport default class Comment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAbusive: false\n    };\n\n    // every time setState is called the render function gets called again\n    // every time we do .bind inline we are making a new reference every time render is called\n    // by doing this we are relying on the garbage collector to get rid of those objects over time\n    // whereas if we pre-bind them we are only using one memory reference\n    this._handleConfirm = this._handleConfirm.bind(this);\n    this._toggleAbuse = this._toggleAbuse.bind(this);\n  }\n\n  render() {\n\n    let commentBody;\n\n    if (!this.state.isAbusive) {\n      commentBody = this.props.body;\n    } else {\n      commentBody = <em>Content marked as abusive</em>;\n    }\n\n    return(\n        <div className=\"comment\">\n\n\n\n          <p className=\"comment-header\">{this.props.author}</p>\n          <p className=\"comment-body\">{commentBody}</p>\n\n          <div className=\"comment-actions\">\n            <CommentConfirmation onDelete={this._handleConfirm}>\n              Delete Comment?\n            </CommentConfirmation>\n            <CommentConfirmation onDelete={this._toggleAbuse}>\n              Report as abuse\n            </CommentConfirmation>\n          </div>\n        </div>\n    );\n  }\n\n  // The abuse state is false by default in the constructor\n  // When the child component CommentConfirmation triggers the onDelete handler,\n  // _toggleAbuse gets called and changes the state of isAbusive which then triggers the\n  // render() method. If the state is abusive the commentBody will be <em>Content marked as abusive</em>\n  _toggleAbuse() {\n    this.setState({\n      isAbusive: !this.state.isAbusive\n    });\n  }\n\n  // When the child component CommentConfirmation triggers the onDelete handler,\n  // _handleConfirm gets called and calls the parent onDelete method passed to it through props\n  // passing its id as argument\n  _handleConfirm() {\n    // This calls the “onDelete” function that was passed in via Comment-box props\n    // and passes the id of the comment that needs to be deleted\n    this.props.onDelete(this.props.id);\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\nimport './comment-box';\nimport './comment-box.css';\n\n\nimport CommentForm from './comment-form';\nimport Comment from './comment';\n\nexport default class CommentBox extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showComments: true,\n      comments: []\n    };\n\n\n\n    // we use bind because any events that need to access any internal object details\n    // need to be explicitly bound to that instance of that component\n    // In simpler terms, that means that “this._addComment” doesn’t really know how to call “this.setState”,\n    // because it doesn't understand what this is supposed to refer to\n\n    this._addComment = this._addComment.bind(this);\n    this._deleteComment = this._deleteComment.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n  }\n\n  componentWillMount() {\n    this._fetchComments();\n  }\n\n  render() {\n    const comments = this._getComments();\n\n    let commentNode;\n    let buttonText = 'Show comments';\n\n    if (this.state.showComments) {\n      buttonText = 'Hide comments';\n      commentNode = (<div className=\"comment-list\">{comments}</div>);\n    }\n\n    return (\n        <div className=\"row comments-container\">\n          <div className=\"cell\">\n            <h2 style={{fontSize: \"35px\"}}>Join The Discussion</h2>\n            <div className=\"comment-box\">\n              <CommentForm addComment={this._addComment}/>\n\n              {this._getPopularMessage(comments.length)}\n              <h3 className=\"comment-count\">{this._getCommentsTitle(comments.length)}</h3>\n              {this._getCommentsVisibility(comments.length, buttonText)}\n              {commentNode}\n            </div>\n          </div>\n        </div>\n\n    );\n  }\n\n  _getComments() {\n    // The operation that we’re performing here is a map operation,\n    // which says “loop over the array and call a function for each element in that array,\n    // storing the results in a new array”.\n    return this.state.comments.map((comment) => {\n      return <Comment\n          {...comment}\n          onDelete={this._deleteComment}\n          key={comment.id}/>\n    });\n  }\n\n  _addComment(commentAuthor, commentBody) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author: commentAuthor,\n      body: commentBody,\n    };\n\n\n    this.setState({comments: [...this.state.comments, comment]});\n  }\n\n  _fetchComments() {\n    axios.get(this.props.apiUrl)\n        .then(response => {\n          const comments = response.data;\n          this.setState({comments});\n        });\n  }\n\n  _handleClick(event) {\n    event.preventDefault();\n    this.setState({showComments: !this.state.showComments});\n  }\n\n  _deleteComment(commentID) {\n    // find the comment with the given id and creates a new comment array without it\n    // This is because React state works with Immutability principle\n    const comments = this.state.comments.filter(\n        comment => comment.id !== commentID\n    );\n\n    \n    this.setState({comments});\n  }\n\n  _getPopularMessage(commentCount) {\n    const POPULAR_COUNT = 10;\n    if (commentCount > POPULAR_COUNT) {\n      return (\n          <div>This post is getting really popular, dont miss out!</div>\n      );\n    }\n  }\n\n  _getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return '1 comment';\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n\n  _getCommentsVisibility(commentCount, buttonText){\n    if (commentCount) {\n      return (\n          <div className=\"comment-visibility-actions\">\n            <button onClick={this._handleClick}>{buttonText}</button>\n          </div>\n      );\n    }\n  }\n}\n\nCommentBox.propTypes = {\n  apiUrl: PropTypes.string.isRequired\n};\n","import React, { useState, useEffect } from 'react';\nimport './blog-detail.css';\nimport CommentBox from \"./comments/comment-box.jsx\"\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BlogDataService from \"../services/BlogService\";\n//article detail component\nfunction BlogDetail(props) {\nconst params = useParams();\n\nconst dispatch = useDispatch();\n\nconst [blogdetail, setBlogData] = useState(\n  {\n    author: {\n      name: \"\"\n    }\n  }\n  );\n\nuseEffect(() => {\n\n  BlogDataService.get(params.id)\n      .then(response => {\n        setBlogData(response.data[0]);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n\n}, []);\n\n    return (\n        <div>\n          <div className=\"cell\">\n            <article className=\"article\">\n              <h1 className=\"article-title\">{blogdetail.title} </h1>\n              <div className=\"article-body\">\n                <p>\n                  {blogdetail.description}\n                </p>\n              </div>\n              <h5 style={{paddingLeft:'20px',fontSize:'19px'}}>Written by {blogdetail.author?.name}</h5>\n            </article>\n          </div>\n\n          <CommentBox apiUrl=\"blog/comments.json\" />\n        </div>\n    )\n\n}\n\nexport default BlogDetail;\n","import React, { useState } from \"react\"\nimport './write.css';\nimport axios from \"axios\"\nimport { useNavigate } from \"react-router-dom\"\n\nconst Write = () => {\n  const user = JSON.parse(localStorage.getItem(\"MyUser\"))\n\n  const history = useNavigate()\n\n  const [ blog, setBlog] = useState({\n      title: \"\",\n      tag:\"\",\n      description:\"\",\n      author: user?._id\n  })\n\n  const handleChange = e => {\n      const { name, value } = e.target\n      console.log(e.target)\n      setBlog({\n          ...blog,\n          [name]: value\n      })\n  }\n\n  const blogging = () => {\n      const { title, tag, description,author } = blog\n      console.log(author)\n      if( title && tag && description && author){\n          axios.post(\"http://localhost:9002/write\", blog)\n          .then( res => {\n              // alert(res.data.message)\n              history(\"/\")\n          })\n      } else {\n          alert(\"invlid input\")\n      }\n\n  }\n\nreturn (\n<div className=\"submit-form\">\n\n    <div style={{paddingLeft:'400px',paddingTop:'70px'}}>\n    <div className=\"form-group\">\n    <label className=\"labels\" htmlFor=\"title\">Title</label>\n      <input\n          style={{width:'500px'}}\n          type=\"text\"\n          id=\"title\"\n          className=\"form-control\"\n          name=\"title\"\n          value={blog.title}\n          onChange={ handleChange }\n          required\n        />\n        </div>\n\n        <div className=\"form-group\">\n        <label className=\"labels\" htmlFor=\"tag\">Tag for the blog</label>\n          <input\n              style={{width:'500px'}}\n              type=\"text\"\n              id=\"tag\"\n              className=\"form-control\"\n              name=\"tag\"\n              value={blog.tag}\n              onChange={ handleChange }\n              required\n            />\n            </div>\n\n        <div className=\"form-group\">\n          <label className=\"labels\" htmlFor=\"description\">Description</label>\n        <textarea rows=\"7\"\n          type=\"textarea\"\n          style={{width:'500px',height:'300px'}}\n          className=\"form-control\"\n          id=\"description\"\n          name=\"description\"\n          value={blog.description}\n          onChange={ handleChange }\n          required\n        />\n        </div>\n\n          <div className=\"form-group\">\n        <input type=\"hidden\" id=\"author\" name=\"author\" value={user.name} onLoad={ handleChange }/>\n        </div>\n\n        <div className=\"blog\" style={{paddingBottom:'50px'}}>\n        <div className=\"button\" onClick={blogging} >Submit</div>\n        </div>\n      </div>\n\n</div>\n)\n}\n\n\nexport default Write\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { createBlog } from \"../actions/blog\";\n// import { connect } from \"react-redux\";\n//\n//\n// class Write extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangeTitle = this.onChangeTitle.bind(this);\n//     this.onChangeDescription = this.onChangeDescription.bind(this);\n//     this.saveBlog = this.saveBlog.bind(this);\n//     this.newBlog = this.newBlog.bind(this);\n//\n//     this.state = {\n//       id: null,\n//       title: \"\",\n//       description: \"\",\n//\n//       submitted: false,\n//     };\n//   }\n//\n//   onChangeTitle(e) {\n//      this.setState({\n//        title: e.target.value,\n//      });\n//    }\n//\n//    onChangeDescription(e) {\n//      this.setState({\n//        description: e.target.value,\n//      });\n//    }\n//\n//    saveBlog() {\n//      const { title, description } = this.state;\n//\n//      this.props\n//        .createBlog(title, description)\n//        .then((data) => {\n//          this.setState({\n//            id: data.id,\n//            title: data.title,\n//            description: data.description,\n//\n//            submitted: true,\n//          });\n//          console.log(data);\n//        })\n//        .catch((e) => {\n//          console.log(e);\n//        });\n//    }\n//\n//    newBlog() {\n//      this.setState({\n//        id: null,\n//        title: \"\",\n//        description: \"\",\n//\n//        submitted: false,\n//      });\n//    }\n//\n//   render() {\n//     return (\n//     <div className=\"submit-form\">\n//     {this.state.submitted ? (\n//         <div>\n//           <h4>You submitted successfully!</h4>\n//           <button className=\"btn btn-success\" onClick={this.newBlog}>\n//             Add\n//           </button>\n//         </div>\n//\n//       ) : (\n//         <div style={{paddingLeft:'400px',paddingTop:'70px'}}>\n//         <div className=\"form-group\">\n//         <label className=\"labels\" htmlFor=\"title\">Title</label>\n//           <input\n//               style={{width:'500px'}}\n//               type=\"text\"\n//               id=\"title\"\n//               className=\"form-control\"\n//               required\n//               value={this.state.title}\n//               onChange={this.onChangeTitle}\n//               name=\"title\"\n//             />\n//             </div>\n//\n//             <div className=\"form-group\">\n//               <label className=\"labels\" htmlFor=\"description\">Description</label>\n//             <textarea rows=\"7\"\n//               type=\"textarea\"\n//               style={{width:'500px',height:'300px'}}\n//               className=\"form-control\"\n//               id=\"description\"\n//               required\n//               value={this.state.description}\n//               onChange={this.onChangeDescription}\n//               name=\"description\"\n//             />\n//             </div>\n//             <div style={{paddingBottom:'50px'}}>\n//             <button style={{backgroundColor:'#45686D'}} className=\"btn btn-success\" onClick={this.saveBlog}>\n//                 Submit\n//             </button>\n//             </div>\n//           </div>\n//       )}\n//     </div>\n//     )\n//   }\n// }\n//\n// const mapStateToProps = (state) => {\n// console.log(state);\n//   return {\n//     blogs: state.blog,\n//   };\n// };\n//\n// export default connect(mapStateToProps, { createBlog })(Write);\n","import React from \"react\"\nimport './header.css';\nimport { Link } from \"react-router-dom\";\nimport { useEffect,useState } from 'react';\n\nfunction Header({updateUser}){\n  const user = JSON.parse(localStorage.getItem(\"MyUser\"))\n  // console.log(user.name)\n\n  return <div>\n    <header className=\"wrapper\">\n          <div className=\"left\">\n          <Link to=\"/\">\n          <img style={{marginLeft: \"40px\"}} src=\"images/logo.png\" alt=\"\" />\n          </Link>\n          </div>\n          <div className=\"right\">\n            <div>\n\n            {user && user.name ?\n              <div className=\"items\">\n              <div className=\"header-start\" ><button style={{paddingBottom:'7px',paddingTop:'7px'}} className=\"button-start\"><Link to=\"/write\" style={{color:'inherit'}} >Get Started, {user.name}</Link></button></div>\n              <div style={{paddingLeft:'30px'}}><div className=\"button\" onClick={() => updateUser({})} >Logout</div></div></div>\n:\n<div className=\"items\"><div className=\"sign\"><Link to=\"signup\" style={{color:'inherit'}}>Sign in</Link></div>\n<div className=\"log\"><Link to=\"signin\" style={{color:'inherit'}}>Log in</Link></div></div>\n }\n\n\n            </div>\n          </div>\n        </header>\n        <div className=\"line\"></div>\n        </div>\n}\n\n\nexport default Header;\n","import React, { useState } from \"react\"\r\nimport \"./register.css\"\r\nimport axios from \"axios\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Register = () => {\r\n\r\n    const history = useNavigate()\r\n\r\n    const [ user, setUser] = useState({\r\n        name: \"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        reEnterPassword: \"\"\r\n    })\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n//api call to register\r\n    const register = () => {\r\n        const { name, email, password, reEnterPassword } = user\r\n        if( name && email && password && (password === reEnterPassword)){\r\n            axios.post(\"http://localhost:9002/register\", user)\r\n            .then( res => {\r\n                // alert(res.data.message)\r\n                history(\"/signin\")\r\n            })\r\n        } else {\r\n            alert(\"invlid input\")\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <h1>Register</h1>\r\n            <input type=\"text\" name=\"name\" value={user.name} placeholder=\"Your Name\" onChange={ handleChange }></input>\r\n            <input type=\"text\" name=\"email\" value={user.email} placeholder=\"Your Email\" onChange={ handleChange }></input>\r\n            <input type=\"password\" name=\"password\" value={user.password} placeholder=\"Your Password\" onChange={ handleChange }></input>\r\n            <input type=\"password\" name=\"reEnterPassword\" value={user.reEnterPassword} placeholder=\"Re-enter Password\" onChange={ handleChange }></input>\r\n            <div className=\"buttonn\" onClick={register} >Register</div>\r\n            <div>or</div>\r\n            <div className=\"buttonn\" onClick={() => history(\"/signin\")}>Login</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, {useState} from \"react\"\r\nimport \"./login.css\"\r\nimport axios from \"axios\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Login = ({updateUser}) => {\r\n\r\n    const history = useNavigate()\r\n\r\n    const [ user, setUser] = useState({\r\n        email:\"\",\r\n        password:\"\"\r\n    })\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n//api call\r\n    const login = () => {\r\n        axios.post(\"http://localhost:9002/login\", user)\r\n        .then(res => {\r\n            // alert(res.data.message)\r\n            console.log(res)\r\n            updateUser(res.data.user)\r\n            history(\"/\")\r\n        }).catch(err => {\r\n          setErrorMessage(err.response.data.message);\r\n          console.log(err.response.data.message);\r\n  });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n        {errorMessage && (\r\n  <p className=\"error\"> {errorMessage} </p>\r\n)}\r\n            <h1>Login</h1>\r\n            <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Enter your Email\"></input>\r\n            <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange}  placeholder=\"Enter your Password\" ></input>\r\n            <div className=\"buton\" onClick={login}>Login</div>\r\n            <div>or</div>\r\n            <div className=\"buton\" onClick={() => history(\"/signup\")}>Register</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\"\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Home from \"./components/home.jsx\"\nimport BlogDetail from \"./components/blog-detail.jsx\"\nimport Write from \"./components/write.jsx\"\nimport Header from \"./components/layout/header.jsx\"\nimport Register from \"./components/register.jsx\"\nimport Login from \"./components/login.jsx\"\nimport { useEffect,useState } from 'react';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\nfunction App(){\n\n  const [ user, setLoginUser] = useState({})\n\n  useEffect(() => {\n    setLoginUser(JSON.parse(localStorage.getItem(\"MyUser\")))\n  }, [])\n\n  const updateUser = (user) => {\n    console.log(user)\n    localStorage.setItem(\"MyUser\", JSON.stringify(user))\n    setLoginUser(user)\n  }\n\n  return <div>\n  <Header updateUser={updateUser}/>\n    <Routes>\n      <Route path=\"/\" element={<Home/>} />\n      <Route path=\"blog-details/:id\" element={<BlogDetail />} />\n      <Route path=\"blog-write\" element={<Write />} />\n      <Route path=\"signup\" element={<Register />} />\n      <Route path=\"signin\" element={<Login updateUser={updateUser}/>} />\n    </Routes>\n\n  </div>\n}\n\n\n\nexport default App;\n","export const CREATE_BLOG = \"CREATE_BLOG\";\nexport const RETRIEVE_BLOGS = \"RETRIEVE_BLOGS\";\nexport const UPDATE_BLOG = \"UPDATE_BLOG\";\nexport const DELETE_BLOG = \"DELETE_BLOG\";\nexport const DELETE_ALL_BLOGS = \"DELETE_ALL_BLOGS\";\nexport const RETRIEVE_BLOGS_BY_ID = \"RETRIEVE_BLOGS_BY_ID\";\nexport const RETRIEVE_BLOGS_BY_TAG = \"RETRIEVE_BLOGS_BY_TAG\";\n","import {\n  CREATE_BLOG,\n  RETRIEVE_BLOGS,\n  RETRIEVE_BLOGS_BY_ID,\n  RETRIEVE_BLOGS_BY_TAG,\n  UPDATE_BLOG,\n  DELETE_BLOG,\n  DELETE_ALL_BLOGS,\n} from \"../actions/types\";\n\nconst initialState = [];\n\nfunction blogReducer(blogs = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_BLOG:\n      return [...blogs, payload];\n\n    case RETRIEVE_BLOGS:\n      return payload;\n\n    case RETRIEVE_BLOGS_BY_ID:\n      return payload;\n    //console.log(payload);\n  //      return blogs.filter(({ id }) => id === payload.id);\n\n\n  case RETRIEVE_BLOGS_BY_TAG:\n    return payload;\n\n\n    case UPDATE_BLOG:\n      return blogs.map((blog) => {\n        if (blog.id === payload.id) {\n          return {\n            ...blog,\n            ...payload,\n          };\n        } else {\n          return blog;\n        }\n      });\n\n    case DELETE_BLOG:\n      return blogs.filter(({ id }) => id !== payload.id);\n\n    case DELETE_ALL_BLOGS:\n      return [];\n\n    default:\n      return blogs;\n  }\n};\n\nexport default blogReducer;\n","import { combineReducers } from \"redux\";\nimport blog from \"./blog\";\n\nexport default combineReducers({\n  blog,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk];\n\n/**\n * This function accepts the app state, and saves it to localStorage\n * @param state\n */\nconst saveState = (state) => {\n    try {\n        // Convert the state to a JSON string\n        const serialisedState = JSON.stringify(state);\n\n        // Save the serialised state to localStorage against the key 'app_state'\n        window.localStorage.setItem('app_state', serialisedState);\n    } catch (err) {\n\n    }\n};\n\n/**\n * This function checks if the app state is saved in localStorage\n */\nconst loadState = () => {\n    try {\n        // Load the data saved in localStorage, against the key 'app_state'\n        const serialisedState = window.localStorage.getItem('app_state');\n\n        if (!serialisedState) return undefined;\n        return JSON.parse(serialisedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\n/**\n * This is where you create the app store\n */\nconst oldState = loadState();\n\nconst store = createStore(\n  rootReducer,\n  oldState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n/**\n * Add a change listener to the store, and invoke our saveState function defined above.\n */\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App.jsx\"\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n    <App/>\n    </Router>\n  </Provider>,document.getElementById(\"root\"));\n"],"sourceRoot":""}